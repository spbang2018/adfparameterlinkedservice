{
	"name": "mapping_data_flows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "az_movies_db",
						"type": "DatasetReference"
					},
					"name": "moviesdb"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "az_destination_blob_dataflow_dataset",
						"type": "DatasetReference"
					},
					"name": "MoviesSink"
				}
			],
			"transformations": [
				{
					"name": "filterComedyMovies"
				},
				{
					"name": "getAverageRating"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> moviesdb\nmoviesdb filter(toInteger(year) >= 1910 && toInteger(year) <= 2000 && rlike(genres, 'Comedy')\r\n\r\n\r\n\r\n\r\n) ~> filterComedyMovies\nfilterComedyMovies aggregate(groupBy(year),\n\tAverageComedyRating = avg(toInteger(Rating))\r\n) ~> getAverageRating\ngetAverageRating sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['avgRatingamovies.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MoviesSink"
		}
	}
}